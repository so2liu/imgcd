name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: linux-amd64
          - goos: linux
            goarch: arm64
            name: linux-arm64
          - goos: darwin
            goarch: amd64
            name: darwin-amd64
          - goos: darwin
            goarch: arm64
            name: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper version detection

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build \
            -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" \
            -o imgcd-${{ matrix.name }} \
            ./cmd/imgcd
          chmod +x imgcd-${{ matrix.name }}

      - name: Create archive
        run: |
          tar -czf imgcd-${{ matrix.name }}.tar.gz imgcd-${{ matrix.name }}
          sha256sum imgcd-${{ matrix.name }}.tar.gz > imgcd-${{ matrix.name }}.tar.gz.sha256

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            imgcd-${{ matrix.name }}.tar.gz
            imgcd-${{ matrix.name }}.tar.gz.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
