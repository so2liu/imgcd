#!/bin/bash
# imgcd self-extracting bundle
# This script contains an embedded imgcd binary and container image data
# Generated by imgcd - https://github.com/yangliu35/imgcd

set -e

# Metadata (will be replaced during generation)
TARGET_PLATFORM="{{TARGET_PLATFORM}}"
IMAGE_NAME="{{IMAGE_NAME}}"
IMGCD_VERSION="{{IMGCD_VERSION}}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Detect current platform
detect_platform() {
    local os=$(uname -s | tr '[:upper:]' '[:lower:]')
    local arch=$(uname -m)

    case "$arch" in
        x86_64)
            arch="amd64"
            ;;
        aarch64|arm64)
            arch="arm64"
            ;;
        *)
            echo -e "${RED}Error: Unsupported architecture: $arch${NC}" >&2
            exit 1
            ;;
    esac

    echo "${os}/${arch}"
}

# Main execution
main() {
    echo "imgcd self-extracting bundle v${IMGCD_VERSION}"
    echo "Target platform: ${TARGET_PLATFORM}"
    echo "Image: ${IMAGE_NAME}"
    echo ""

    # Detect current platform
    CURRENT_PLATFORM=$(detect_platform)
    echo "Detected platform: ${CURRENT_PLATFORM}"

    # Warn if platforms don't match
    if [ "$CURRENT_PLATFORM" != "$TARGET_PLATFORM" ]; then
        echo -e "${YELLOW}Warning: Current platform ($CURRENT_PLATFORM) differs from target platform ($TARGET_PLATFORM)${NC}"
        echo -e "${YELLOW}The embedded imgcd binary may not be compatible with this system.${NC}"
        read -p "Continue anyway? (y/N) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo "Aborted."
            exit 1
        fi
    fi

    # Create temporary directory
    TEMP_DIR=$(mktemp -d -t imgcd-bundle.XXXXXX)
    trap "rm -rf $TEMP_DIR" EXIT

    echo ""
    echo "Extracting bundle to temporary directory..."

    # Extract imgcd binary
    IMGCD_BIN="$TEMP_DIR/imgcd"
    sed -n '/^__IMGCD_BINARY_START__$/,/^__IMGCD_BINARY_END__$/p' "$0" | \
        sed '1d;$d' | \
        base64 -d > "$IMGCD_BIN"
    chmod +x "$IMGCD_BIN"

    # Extract image data
    IMAGE_FILE="$TEMP_DIR/image.tar.gz"
    sed -n '/^__IMAGE_DATA_START__$/,/^__IMAGE_DATA_END__$/p' "$0" | \
        sed '1d;$d' | \
        base64 -d > "$IMAGE_FILE"

    echo "Extraction complete."
    echo ""
    echo "Importing image..."

    # Import the image using the extracted imgcd binary
    if "$IMGCD_BIN" load --from "$IMAGE_FILE"; then
        echo ""
        echo -e "${GREEN}Successfully imported image: ${IMAGE_NAME}${NC}"
        exit 0
    else
        echo ""
        echo -e "${RED}Failed to import image${NC}" >&2
        exit 1
    fi
}

# Run main function
main "$@"

# Exit before data section
exit 0

__IMGCD_BINARY_START__
{{IMGCD_BINARY_BASE64}}
__IMGCD_BINARY_END__
__IMAGE_DATA_START__
{{IMAGE_DATA_BASE64}}
__IMAGE_DATA_END__
